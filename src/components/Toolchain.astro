---
import Image from 'astro/components/Image.astro';
import {analyse, archiv, erstellung, nachvollziehbarkeit, ontologie, rg, verarbeitung} from "../assets";

const steps: Step[] = [
    {
        title: "Erstellung",
        subtitle: "Digitalisierung historischer Ressourcen",
        description: `HisQu zielt darauf ab, die Digitalisierung gedruckter historischer Quellen mit anspruchsvollen Layouts – etwa Frakturschriften oder komplexen Spaltenstrukturen – deutlich zu verbessern. Dafür erweitern wir klassische OCR-Tools wie Tesseract durch den Einsatz von LLMs: Diese übernehmen die Vorverarbeitung der Quellen mithilfe von Bounding Boxes und ermöglichen zugleich eine nachträgliche Korrektur der Ergebnisse.`,
        image: { src: erstellung, alt: "Visualisierung der Digitalisierung historischer Quellen" },
        tools: [
            { name: "RAG Online", href: "/tools/scan-prep" },
        ],
    },
    {
        title: "Modellierung",
        subtitle: "Zentrales Element: Die Ontologie",
        description: `Die konsequente Digitalisierung geschichtswissenschaftlicher Forschungsprozesse erfordert domänenspezifische Vokabulare. Nur so lassen sich Quellen und Forschungsaussagen semantisch erfassen und interoperabel machen. HisQu setzt hierfür auf Wissensgraphen, die sowohl die Ontologie als auch die damit formulierten inhaltlichen Aussagen gleichberechtigt abbilden. Dieses Modell schafft Flexibilität für die digitale Modellierung und die Weiterentwicklung fachlicher Expertise. Grundlage dafür ist die Arbeit mit Protégé.`,
        image: { src: ontologie, alt: "Darstellung einer Ontologie-Modellierung" },
        tools: [
            { name: "Protégé Online", href: "/tools/protege-profile" },
            { name: "RG Guidelines", href: "/tools/rg-guidelines", image: { src: ontologie, alt: "RG" } },
        ],
    },
    {
        title: "Verarbeitung",
        subtitle: "Einbindung von Large Language Models",
        description: `Für die Datenverarbeitung entwickelt HisQu innovative Tools auf Basis von LLMs. Mit Paredros steht Historiker:innen eine Grammatikentwicklungsumgebung zur Verfügung, die bei der Formulierung von Grammatiken zur Auswertung von Quellen unterstützt. Ergänzend entsteht mit OPA (Ontology Parser Assistant) ein Python-basierter LLM-Client, mit dem Ontologie-Snippets erstellt und flexibel erweitert werden – eine Grundlage für die semantische Modellierung und Weiterentwicklung domänenspezifischen Wissens.`,
        image: { src: verarbeitung, alt: "Workflow mit LLM-basierten Tools" },
        tools: [
            { name: "Paredros", href: "/tools/paredros" },
            { name: "OPA", href: "/tools/opa" },
        ],
    },
    {
        title: "Analyse",
        subtitle: "KI-unterstütztes SPARQL-Endpoint",
        description: `Um den Zugang zu komplexen SPARQL-Abfragen zu erleichtern, entwickelt HisQu einen grafischen Query-Builder. Dieser ermöglicht es, Abfragen intuitiv zusammenzustellen und zugleich den generierten SPARQL-Code einzusehen. Perspektivisch wird zudem eine Anbindung an ein LLM integriert, um die Erstellung und Anpassung von Abfragen noch benutzerfreundlicher zu gestalten.`,
        image: { src: analyse, alt: "Beispiel einer grafischen SPARQL-Abfrage" },
        caption: "Beispiel einer Abfrage zu allen Klerikern mit Ortsbezug zur Diözese Mainz – oben erfolgt der Aufbau über die grafische Oberfläche, unten die Ausgabe des entsprechenden SPARQL-Codes.",
        tools: [
            { name: "Query by Graph", href: "/tools/quebyg" }, // ← your example
            { name: "SPARQL Playground", href: "/tools/sparql-playground" },
        ],
    },
    {
        title: "Archivierung",
        subtitle: "Linked Open Data mit FactGrid/Wikibase",
        description: `Für die Speicherung der Daten nutzt HisQu FactGrid, eine speziell auf die Bedürfnisse der Geschichtswissenschaft zugeschnittene Wikibase-Instanz. Sie ermöglicht kollaboratives und nachvollziehbares Arbeiten mit Klarnamen. Alle aktiven Mitwirkenden erhalten personalisierte Konten, die eindeutig über ORCID-IDs verknüpft sind. Auf diese Weise entstehen zitierfähige (Mikro-)Publikationen, die die Sichtbarkeit und Akzeptanz von HisQu in der wissenschaftlichen Community stärken.`,
        image: { src: archiv, alt: "FactGrid-Oberfläche" },
        tools: [{ name: "FactGrid Console", href: "/tools/factgrid-console" }],
    },
    {
        title: "Nachvollziehbarkeit",
        subtitle: "Dokumentationsframework für den Forschungsprozess",
        description: `isQu entwickelt ein interaktives Labortagebuch, das historische Forschungsprozesse transparent und reproduzierbar macht. Dafür werden abstrakte Dokumentationsbausteine wie Datenerhebung, -auswertung oder Visualisierung definiert und in einer graphischen Oberfläche zu konkreten Workflows zusammengesetzt.

Ein visueller Editor bildet die einzelnen Schritte samt Abhängigkeiten ab und ermöglicht ihre Verwaltung mit zeitgemäßen Werkzeugen wie Git-Integration und automatisch generiertem Wiki.`,
        image: { src: nachvollziehbarkeit, alt: "Visueller Workflow-Editor" },
        tools: [
            { name: "Lab Notebook", href: "/tools/lab-notebook" },
            { name: "Git Integrator", href: "/tools/git-integrator" },
        ],
    },
];

const {
    title = "Ein Forschungsprozess ohne Unterbrechungen nach den FAIR-Prinzipien",
    description = "In den digitalen Geisteswissenschaften dominieren bislang digitale Editionen und punktuelle „Insel-Lösungen“ – Tools und Skripte, die nur für ein spezifisches Forschungsproblem entwickelt wurden. Ein geschlossener digitaler Forschungsdatenzyklus fehlt, wodurch Nachvollziehbarkeit, Reproduzierbarkeit und nachhaltige Archivierung oft nicht gewährleistet sind. HisQu setzt hier an und entwickelt eine fachspezifische Lösung, die historische Quellen und Forschungsprozesse gezielt digital unterstützt und den Forschungsworkflow nahtlos zusammenführt.",
    eyebrow = "Ein lückenloser Prozess",

    rgTitle = "Die Quelle: Das Repertorium Germanicum",
    rgDescription = "Kurze Erläuterung des RG-Konzepts. Beschreibe hier prägnant, wofür RG steht und welchen Mehrwert es im HisQu-Workflow liefert.",
    rgImage = {src: rg, alt: "Illustration"},
    rgPoints = [
        {title: "Aufarbeitung wertvoller Informationen für die Mediävistik", text: "und so weiter bitte ändern"},
        {title: "Buzzword", text: "Erhöht Nachvollziehbarkeit durch klare Zuständigkeiten und Datenflüsse."},
        {title: "Schlagwort", text: "Kann mit wachsenden Anforderungen und Datenmengen mitwachsen."},
    ],

    gradientFrom = "#ff80b5",
    gradientTo = "#9089fc",
    class: outerClass = "",
} = Astro.props as Props;
---

<section class={`relative isolate ${outerClass}`} aria-label={title}>
    <!-- Hintergrund-Deko -->
    <div class="absolute top-0 right-0 left-1/2 -z-10 -ml-24 transform-gpu overflow-hidden blur-3xl lg:ml-24 xl:ml-48"
         aria-hidden="true">
        <div class="aspect-[801/1036] w-[50.0625rem]"
             style={`background-image: linear-gradient(to top right, ${gradientFrom}, ${gradientTo}); opacity:0.3; clip-path: polygon(63.1% 29.5%,100% 17.1%,76.6% 3%,48.4% 0%,44.6% 4.7%,54.5% 25.3%,59.8% 49%,55.2% 57.8%,44.4% 57.2%,27.8% 47.9%,35.1% 81.5%,0% 97.7%,39.2% 100%,35.2% 81.4%,97.2% 52.8%,63.1% 29.5%)`}>
        </div>
    </div>

    <div class="px-6 pt-24 pb-16 sm:pt-40 lg:px-8 lg:pt-32">
        <div class="py-24 sm:py-32">
            <div class="px-6 lg:px-8">
                <div class="mx-auto max-w-3xl lg:mx-0">
                    {eyebrow && (
                            <p class="text-base/7 font-semibold text-indigo-600 dark:text-indigo-400">{eyebrow}</p>)}
                    <h2 class="mt-2 text-5xl font-semibold tracking-tight text-gray-900 sm:text-7xl dark:text-white">{title}</h2>
                    <p class="mt-8 text-lg font-medium text-pretty text-gray-500 sm:text-xl/8 dark:text-gray-400">{description}</p>
                </div>
            </div>
        </div>

        <!-- RG Explanation-->
        <div class="relative mx-auto max-w-7xl sm:px-6 lg:px-8">
            <div class="mx-auto grid max-w-6xl grid-cols-1 gap-x-8 gap-y-12 lg:grid-cols-12 lg:items-center">
                <!-- Only visual effect -->
                <div aria-hidden="true"
                     class="pointer-events-none absolute top-1/2 left-12 -z-10 -translate-y-1/2 transform-gpu blur-3xl lg:top-auto lg:-bottom-48 lg:translate-y-0">
                    <div style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"
                         class="aspect-1155/678 w-288.75 bg-linear-to-tr from-[#ff80b5] to-[#9089fc] opacity-25 dark:opacity-20"></div>
                </div>

                <!-- Visual (optional) -->
                {rgImage?.src && (
                        <div class="lg:col-span-7">
                            <Image
                                    src={rgImage.src}
                                    alt={rgImage.alt ?? ""}
                                    class="relative -z-0 w-full max-w-4xl rounded-xl shadow-xl ring-1 ring-gray-900/10 dark:ring-white/10"
                                    loading="lazy"
                            />
                        </div>
                )}

                <!-- Text -->
                <div class="lg:col-span-5">
                    <h3 class="text-3xl font-semibold tracking-tight text-gray-900 dark:text-white">{rgTitle}</h3>
                    <p class="mt-6 text-lg/8 text-gray-600 dark:text-gray-300">{rgDescription}</p>

                    <dl class="mt-10 space-y-6">
                        {rgPoints.map((p, idx) => (
                                <div class="relative pl-10" aria-label={`rg-point-${idx}`}>
                                    <!-- colourful dot -->
                                    <span class="absolute left-0 top-1 inline-block size-6 rounded-full opacity-90"
                                          style={`background-image: linear-gradient(to top right, ${gradientFrom}, ${gradientTo});`}></span>
                                    <dt class="font-semibold text-gray-900 dark:text-white">{p.title}</dt>
                                    <dd class="text-gray-600 dark:text-gray-300">{p.text}</dd>
                                </div>
                        ))}
                    </dl>
                </div>
            </div>

            <!-- decorative colourful blur “dot/cloud” kept -->
            <div aria-hidden="true"
                 class="pointer-events-none absolute left-12 top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-3xl lg:top-auto lg:-bottom-48 lg:translate-y-0">
                <div
                        class="aspect-[1155/678] w-[18rem] opacity-25 dark:opacity-20"
                        style={`clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%); background-image: linear-gradient(to top right, ${gradientFrom}, ${gradientTo});`}>
                </div>
            </div>
        </div>

        <!-- Prozess-Schritte (Astro-kompatibel, konsistente Einrückung & Buttons) -->
        <div class="mt-24 space-y-24">
            {steps.map((step, i) => (
                    <div class="mx-auto grid max-w-6xl grid-cols-1 items-center gap-y-10 gap-x-8 lg:grid-cols-12">
                        <!-- Text-Spalte -->
                        <div class={`lg:col-span-6 ${i % 2 === 0 ? 'lg:order-1' : 'lg:order-2'}`}>
                            <h2 class="text-2xl font-semibold text-gray-900 dark:text-white">{i + 1}. {step.title}</h2>
                            <span class="mt-2 text-xl font-medium text-purple-600 dark:text-purple-400">{step.subtitle}</span>
                            <p class="mt-4 text-base text-gray-600 dark:text-gray-300">{step.description}</p>

                            {step.tools && step.tools.length > 0 && (
                                    <div class="mt-6 flex flex-wrap gap-3">
                                        {step.tools.map((tool) => (
                                                <a
                                                        href={tool.href}
                                                        class="group inline-flex items-center gap-2 rounded-xl border border-gray-200 px-3 py-2 text-sm font-medium text-gray-700 shadow-sm ring-1 ring-inset ring-gray-900/5 hover:shadow-md hover:ring-gray-900/10 dark:border-white/10 dark:text-gray-200 dark:ring-white/10"
                                                        aria-label={`Öffne Tool: ${tool.name}`}
                                                >
                                                    {tool.image?.src && (
                                                            <Image
                                                                    src={tool.image.src}
                                                                    alt={tool.image.alt ?? ""}
                                                                    width={24}
                                                                    height={24}
                                                                    class="h-6 w-6 rounded-md ring-1 ring-black/5 dark:ring-white/10"
                                                                    loading="lazy"
                                                            />
                                                    )}
                                                    <span class="relative">
                  {tool.name}
                                                        <span
                                                                class="absolute -bottom-1 left-0 h-0.5 w-0 bg-gradient-to-r from-[var(--grad-from)] to-[var(--grad-to)] transition-all duration-200 group-hover:w-full"
                                                                style={`--grad-from:${gradientFrom}; --grad-to:${gradientTo};`}
                                                                aria-hidden="true"
                                                        />
                </span>
                                                </a>
                                        ))}
                                    </div>
                            )}
                        </div>

                        <!-- Bild-Spalte -->
                        <div class={`lg:col-span-6 ${i % 2 === 0 ? 'lg:order-2' : 'lg:order-1'}`}>
                            <Image
                                    src={step.image.src}
                                    alt={step.image.alt ?? ""}
                                    class="w-full rounded-xl shadow-lg ring-1 ring-gray-900/10 dark:ring-white/10 bg-white p-2"
                                    loading="lazy"
                            />
                            {step.caption && (
                                    <p class="mt-2 text-sm text-gray-500 dark:text-gray-400 italic">{step.caption}</p>
                            )}
                        </div>
                    </div>
                ))}
                </div>
                </div>
                </section>
