---
import { getCollection } from 'astro:content';
import TeamMember from '../../components/TeamMember.astro';
import Layout from '../../layouts/IndexLayout.astro';
import { partners } from '../../consts';
import { Image } from 'astro:assets';

const team = await getCollection('team');

function groupBy(arr: any[], key: string) {
    return arr.reduce((acc: Record<string, any[]>, item) => {
        const group = String(item.data[key] ?? '');
        if (!acc[group]) acc[group] = [];
        acc[group].push(item);
        return acc;
    }, {} as Record<string, any[]>);
}

// Expect team member frontmatter "group" to be the partner key (e.g. "fsu-jena")
const grouped = groupBy(team, 'group');

// Build partner lookup map
const partnersMap = Object.fromEntries(partners.map(p => [p.key, p]));

// Order groups by the partner's numerical_position; fallback to name if equal / missing
const compareGroups = ([ga]: [string, any[]], [gb]: [string, any[]]) => {
    const pa = partnersMap[ga];
    const pb = partnersMap[gb];
    const na = pa?.numerical_position ?? Number.POSITIVE_INFINITY;
    const nb = pb?.numerical_position ?? Number.POSITIVE_INFINITY;
    if (na !== nb) return na - nb; // ascending by numerical_position
    return String(ga).localeCompare(String(gb), 'de');
};

const compareMembers = (a: any, b: any) => {
    const an = Number(a?.data?.numerical_position ?? Number.POSITIVE_INFINITY);
    const bn = Number(b?.data?.numerical_position ?? Number.POSITIVE_INFINITY);
    if (an !== bn) return an - bn; // ascending; flip for descending
    // optional tiebreaker by name:
    return String(a?.data?.last_name ?? a?.data?.name ?? '')
        .localeCompare(String(b?.data?.last_name ?? b?.data?.name ?? ''), 'de');
};
---

<Layout title="Team | HisQu" description="Meet the HisQu team: academic titles, positions, and publications.">
    <section class="bg-white py-24 sm:py-32 dark:bg-gray-900">
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
            <div class="mx-auto max-w-2xl lg:mx-0">
                <h1 class="text-4xl font-semibold tracking-tight text-pretty text-gray-900 sm:text-5xl dark:text-white">
                    Unsere Arbeitsgruppe
                </h1>
                <p class="mt-6 text-lg/8 text-gray-600 dark:text-gray-400">
                    Wir sind ein interdisziplinäres Team aus Historikern und Informatikern, das sich der Digitalisierung und semantischen Erschließung
                    semistrukturierter Quellen &mdash; am Beispiel des Repertorium Germanicum &mdash; widmet.
                </p>
            </div>

            {Object.entries(grouped).sort(compareGroups).map(([groupKey, members]) => {
                const partner = partnersMap[groupKey];
                return (
                    <section class="mt-20" aria-labelledby={`team-group-${groupKey}`}>
                        <div class="flex items-center gap-4 mb-8">
                            {partner ? (
                                <h2 id={`team-group-${groupKey}`} class="flex items-center gap-4 text-2xl font-semibold tracking-tight text-gray-900 dark:text-white m-0">
                                    <span class="inline-flex items-center h-12">
                                        {(() => {
                                            const img = partner.srcLight || partner.srcDark;
                                            if (img && typeof img === 'object' && 'src' in img) {
                                                return (
                                                    <Image src={img} alt={partner.alt || partner.name} width={partner.width || 158} height={partner.height || 48} class="h-12 w-auto max-h-12 object-contain align-middle inline-block" loading="lazy" />
                                                );
                                            }
                                            if (typeof img === 'string') {
                                                return (
                                                    <img src={img} alt={partner.alt || partner.name} width={partner.width || 158} height={partner.height || 48} class="h-12 w-auto max-h-12 object-contain align-middle inline-block" loading="lazy" />
                                                );
                                            }
                                            return null;
                                        })()}
                                    </span>
                                    <span class="inline-flex items-center leading-tight">
                                        {partner.unit} &middot; {partner.name}
                                    </span>
                                </h2>
                            ) : (
                                <h2 id={`team-group-${groupKey}`} class="text-2xl font-semibold tracking-tight text-gray-900 dark:text-white">
                                    {groupKey || 'Sonstiges'}
                                </h2>
                            )}
                        </div>
                        <ul
                            role="list"
                            class="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 sm:grid-cols-2 lg:mx-0 lg:max-w-none lg:grid-cols-3"
                        >
                            {members
                                .slice()
                                .sort(compareMembers)
                                .map((member) => (
                                    <li class="flex flex-col">
                                        <a href={` /team/${member.id}`.trim()}>
                                            <div class="rounded-2xl">
                                                <TeamMember member={member.data} />
                                            </div>
                                        </a>
                                    </li>
                                ))}
                        </ul>
                    </section>
                );
            })}
        </div>
    </section>
</Layout>
